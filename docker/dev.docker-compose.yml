
networks:
  staticpi-net:
    name: staticpi-net
services:
  staticpi_postgres:
    image: staticpi_postgres:0.1.3
    container_name: staticpi_postgres
    hostname: staticpi_postgres
    build:
      context: /workspaces/backend
      dockerfile: ./docker/dockerfile/postgres.Dockerfile
    env_file: ./env/.postgres.env
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    restart: always
    shm_size: 256MB
    volumes:
      - /ramdrive/staticpi/pg_data:/pg_data
    ports:
      - 127.0.0.1:5432:5432
    networks:
      - staticpi-net
    logging:
      options:
        max-size: 10m
    healthcheck:
      test: ["CMD", "/healthcheck/health_postgres.sh"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256m
  staticpi_redis:
    image: staticpi_redis:0.1.3
    container_name: staticpi_redis
    hostname: staticpi_redis
    build:
      context: /workspaces/backend
      dockerfile: ./docker/dockerfile/redis.Dockerfile
    env_file: ./env/.redis.env
    volumes:
      - /ramdrive/staticpi/redis_data:/redis_data
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    restart: always
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - staticpi-net
    logging:
      options:
        max-size: 10m
    healthcheck:
      test: ["CMD", "/healthcheck/health_redis.sh"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 32M
  staticpi_backup:
    image: staticpi_backup:0.1.3
    container_name: staticpi_backup
    build:
      context: .
      dockerfile: ./dockerfile/backup.Dockerfile
    env_file: ./env/.backup.env
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    volumes:
      - /ramdrive/staticpi/backups:/backups
      - /ramdrive/staticpi/redis_data:/redis_data:ro
      - /ramdrive/staticpi/logs:/logs:ro
    networks:
      - staticpi-net
    logging:
      driver: "json-file"
      options:
        max-size: "16m"
    depends_on:
      staticpi_postgres:
        condition: service_healthy
    restart: 'no'
    deploy:
      resources:
        limits:
          memory: 64MB
  staticpi_api:
    image: staticpi_api:0.1.3
    container_name: staticpi_api
    hostname: staticpi_api
    build:
      context: /workspaces/backend
      dockerfile: docker/dockerfile/api.Dockerfile
    volumes:
      - /ramdrive/staticpi/:/logs
      - /workspaces/backend/.env:/app_env/.api.env:ro
    ports:
      - "127.0.0.1:8008:8008"
      - "127.0.0.1:8009:8009"
      - "127.0.0.1:8010:8010"
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    restart: always
    networks:
      - staticpi-net
    logging:
      options:
        max-size: 10m
    deploy:
      resources:
        limits:
          memory: 768m
    healthcheck:
      test: ["CMD", "/healthcheck/health_api.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      staticpi_postgres:
        condition: service_healthy
      staticpi_redis:
        condition: service_healthy