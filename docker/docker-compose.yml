
networks:
  staticpi-net:
    name: staticpi-net
services:
  staticpi_postgres:
    hostname: staticpi_postgres
    image: staticpi_postgres:0.1.2
    container_name: staticpi_postgres
    build:
      context:  $HOME/staticpi.d
      dockerfile: $HOME/staticpi.d/docker/dockerfile/postgres.Dockerfile
    env_file: $HOME/staticpi.d/docker/env/.postgres.env
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    restart: always
    shm_size: 256MB
    volumes:
      - $HOME/databases.d/staticpi/pg_data:/pg_data
    networks:
      - staticpi-net
    healthcheck:
      test: ["CMD", "/healthcheck/health_postgres.sh"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
  staticpi_redis:
    image: staticpi_redis:0.1.2
    container_name: staticpi_redis
    hostname: staticpi_redis
    build:
      context:  $HOME/staticpi.d
      dockerfile: $HOME/staticpi.d/docker/dockerfile/redis.Dockerfile
    env_file: $HOME/staticpi.d/docker/env/.redis.env
    volumes:
      - $HOME/databases.d/staticpi/redis_data:/redis_data
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    restart: always
    networks:
      - staticpi-net
    healthcheck:
      test: ["CMD", "/healthcheck/health_redis.sh"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 64M
  staticpi_backup:
    image: staticpi_backup:0.1.2
    container_name: staticpi_backup
    build:
      context: .
      dockerfile: $HOME/staticpi.d/docker/dockerfile/backup.Dockerfile
    env_file: $HOME/staticpi.d/docker/env/.backup.env
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    volumes:
      - $HOME/databases.d/staticpi/backups:/backups
      - $HOME/databases.d/staticpi/redis_data:/redis_data:ro
      - $HOME/logs.d/staticpi:/logs:ro
    networks:
      - staticpi-net
    logging:
      driver: "json-file"
      options:
        max-size: "16m"
    depends_on:
      staticpi_postgres:
        condition: service_healthy
    restart: 'no'
    deploy:
      resources:
        limits:
          memory: 64MB
  staticpi_api:
    image: staticpi_api:0.1.2
    container_name: staticpi_api
    hostname: staticpi_api
    build:
      context: $HOME/staticpi.d
      dockerfile: docker/dockerfile/api.Dockerfile
    volumes:
      - $HOME/logs.d/staticpi:/logs
      - $HOME/staticpi.d/docker/env/.api.env:/app_env/.api.env:ro
      - $HOME/databases.d/staticpi/redis_data:/redis_data:ro
    ports:
      - "127.0.0.1:8008:8008"
      - "127.0.0.1:8009:8009"
      - "127.0.0.1:8010:8010"
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
    ipc: private
    restart: always
    networks:
      - staticpi-net
    logging:
      options:
        max-size: 10m
    deploy:
      resources:
        limits:
          memory: 2048M
    healthcheck:
      test: ["CMD", "/healthcheck/health_api.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      staticpi_postgres:
        condition: service_healthy
      staticpi_redis:
        condition: service_healthy